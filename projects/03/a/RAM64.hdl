// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel[0]=address[0], sel[1]=address[1], sel[2]=address[2], a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh);
    RAM8(in=in, load=loada, address[0]=address[3], address[1]=address[4], address[2]=address[5], out=a);
    RAM8(in=in, load=loadb, address[0]=address[3], address[1]=address[4], address[2]=address[5], out=b);
    RAM8(in=in, load=loadc, address[0]=address[3], address[1]=address[4], address[2]=address[5], out=c);
    RAM8(in=in, load=loadd, address[0]=address[3], address[1]=address[4], address[2]=address[5], out=d);
    RAM8(in=in, load=loade, address[0]=address[3], address[1]=address[4], address[2]=address[5], out=e);
    RAM8(in=in, load=loadf, address[0]=address[3], address[1]=address[4], address[2]=address[5], out=f);
    RAM8(in=in, load=loadg, address[0]=address[3], address[1]=address[4], address[2]=address[5], out=g);
    RAM8(in=in, load=loadh, address[0]=address[3], address[1]=address[4], address[2]=address[5], out=h);
    Mux8Way16(a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h, sel[0]=address[0], sel[1]=address[1], sel[2]=address[2], out=out);
}
